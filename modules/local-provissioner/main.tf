resource "null_resource" "apply_config_map" {
  # provisioner "local-exec" {
  #   command = "aws cloudformation delete-stack --stack-name eksctl-${var.name}-eks-cluster-addon-iamserviceaccount-kube-system-${var.name}-alb-ingress-controller --region ${var.region} & aws eks update-kubeconfig --name ${var.name}-eks-cluster --region ${var.region} && eksctl create iamidentitymapping --cluster ${var.name}-eks-cluster --region ${var.region} --arn ${data.aws_iam_role.describe_role.arn} --username build --group system:masters  && eksctl utils associate-iam-oidc-provider --region ${var.region} --cluster ${var.name}-eks-cluster --approve && eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=${lower(var.name)}-alb-ingress-controller --role-name ${lower(var.name)}-AmazonEKSLoadBalancerControllerRole --attach-policy-arn=${data.aws_iam_policy.lbcIAMPolicy.arn} --override-existing-serviceaccounts --approve && helm repo add eks https://aws.github.io/eks-charts  && helm repo update && helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=${var.name}-eks-cluster --set serviceAccount.create=false --set serviceAccount.name=${lower(var.name)}-alb-ingress-controller"
  # }

   provisioner "local-exec" {
    command = "eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=${lower(var.name)}-ebs-csi-controller-sa --role-name ${lower(var.name)}-AmazonEKS_EBS_CSI_DriverRole --attach-policy-arn=${data.aws_iam_policy.ebs-csi.arn} --override-existing-serviceaccounts  --role-only --approve && eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=${lower(var.name)}-aws-node --role-name ${lower(var.name)}-AmazonEKSVPCCNIRole --attach-policy-arn=arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy --override-existing-serviceaccounts  --approve && aws eks create-addon --cluster-name ${var.name}-eks-cluster --region ${var.region} --addon-name aws-ebs-csi-driver --service-account-role-arn arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${lower(var.name)}-AmazonEKS_EBS_CSI_DriverRole && kubectl create ns prometheus && helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics && helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm upgrade -i prometheus prometheus-community/prometheus --namespace prometheus --set alertmanager.persistentVolume.storageClass=\"gp2\",server.persistentVolume.storageClass=\"gp2\" && kubectl create ns grafana && helm repo add grafana https://grafana.github.io/helm-charts -f values.yml && helm install grafana grafana/grafana --namespace grafana --set persistence.storageClass=\"gp2\" --set persistence.enabled=true --set adminPassword='kirik@123' --values grafana.yaml --set service.type=ClusterIP -f values.yml"
  }

  # provisioner "local-exec" {
  #   when    = destroy
  #   command = "aws cloudformation delete-stack --stack-name eksctl-${var.name}-eks-cluster-addon-iamserviceaccount-kube-system-${var.name}-alb-ingress-controller --region ${var.region}"
  # }
  # depends_on = [
  #   aws_eks_cluster.devops-eks
  # ]
}