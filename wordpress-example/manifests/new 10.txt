aws eks update-kubeconfig --name ${var.name}-eks-cluster --region ${var.region} && eksctl create iamidentitymapping --cluster ${var.name}-eks-cluster --region ${var.region} --arn ${data.aws_iam_role.describe_role.arn} --username build --group system:masters  && eksctl utils associate-iam-oidc-provider --region ${var.region} --cluster ${var.name}-eks-cluster --approve  && eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=${data.aws_iam_policy.lbcIAMPolicy.arn} --override-existing-serviceaccounts --approve && helm repo add eks https://aws.github.io/eks-charts  && helm repo update && helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=${var.name}-eks-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller



eksctl create iamserviceaccount --cluster Terraform-eks-cluster --region us-east-1 --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::237924323600:policy/ALBIngressControllerIAMPolicy --override-existing-serviceaccounts --approve

aws eks update-kubeconfig --name Terraform-eks-cluster --region us-east-1

eksctl create iamidentitymapping --cluster Terraform-eks-cluster --region ${var.region} --arn ${data.aws_iam_role.describe_role.arn} --username build --group system:masters

eksctl utils associate-iam-oidc-provider --region us-east-1 --cluster Terraform-eks-cluster --approve

eksctl delete iamserviceaccount  ${lower(var.name)}-alb-ingress-controller --cluster ${var.name}-eks-cluster --region ${var.region} --wait

helm install aws-load-balancer-controller eks/aws-load-balancer-controller --name alb-controller -n kube-system --set clusterName=${var.name}-eks-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller


eksctl delete iamserviceaccount  eksctl-Terraform-* --cluster Terraform-eks-cluster-eks --region us-east-1 --wait

aws cloudformation delete-stack --stack-name eksctl-${var.name}-eks-cluster-addon-iamserviceaccount-kube-system-${var.name}-alb-ingress-controller --region ${var.region}

aws cloudformation delete-stack --stack-name eksctl-Terraform-eks-cluster-addon-iamserviceaccount-kube-system-terraform-alb-ingress-controller --region us-east-1


grafana
"eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=${lower(var.name)}-ebs-csi-controller-sa --role-name ${lower(var.name)}-AmazonEKS_EBS_CSI_DriverRole --attach-policy-arn=${data.aws_iam_policy.ebs-csi.arn} --override-existing-serviceaccounts  --role-only --approve && eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=${lower(var.name)}-aws-node --role-name ${lower(var.name)}-AmazonEKSVPCCNIRole --attach-policy-arn=arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy --override-existing-serviceaccounts  --approve && aws eks create-addon --cluster-name ${var.name}-eks-cluster --region ${var.region} --addon-name aws-ebs-csi-driver --service-account-role-arn arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${lower(var.name)}-AmazonEKS_EBS_CSI_DriverRole && kubectl create ns prometheus && helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics && helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm upgrade -i prometheus prometheus-community/prometheus --namespace prometheus --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2" && kubectl create ns grafana && helm repo add grafana https://grafana.github.io/helm-charts && helm install grafana grafana/grafana --namespace grafana --set persistence.storageClass="gp2" --set persistence.enabled=true --set adminPassword='kirik@123' --values grafana.yaml --set service.type=LoadBalancer"


eksctl create iamserviceaccount \
  --name ebs-csi-controller-sa \
  --namespace kube-system \
  --cluster my-cluster \
  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
  --approve \
  --role-only \
  --role-name AmazonEKS_EBS_CSI_DriverRole

aws eks create-addon --cluster-name ${var.name}-eks-cluster --region ${var.region} --addon-name aws-ebs-csi-driver --service-account-role-arn arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${lower(var.name)}-AmazonEKS_EBS_CSI_DriverRole 


eksctl create iamserviceaccount \
  --name aws-node \
  --namespace kube-system \
  --cluster $EKS_CLUSTER_NAME \
  --role-name "AmazonEKSVPCCNIRole" \
  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \
  --override-existing-serviceaccounts \
  --approve
  
  helm upgrade -i prometheus prometheus-community/prometheus --namespace prometheus --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2" -f values.yaml
  
  
  
  helm install grafana grafana/grafana --namespace grafana --set persistence.storageClass="gp2" --set persistence.enabled=true --set adminPassword='kirik@123' --values grafana.yaml --set service.type=ClusterIP -f values.yaml