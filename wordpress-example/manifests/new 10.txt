aws eks update-kubeconfig --name ${var.name}-eks-cluster --region ${var.region} && eksctl create iamidentitymapping --cluster ${var.name}-eks-cluster --region ${var.region} --arn ${data.aws_iam_role.describe_role.arn} --username build --group system:masters  && eksctl utils associate-iam-oidc-provider --region ${var.region} --cluster ${var.name}-eks-cluster --approve  && eksctl create iamserviceaccount --cluster ${var.name}-eks-cluster --region ${var.region} --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=${data.aws_iam_policy.lbcIAMPolicy.arn} --override-existing-serviceaccounts --approve && helm repo add eks https://aws.github.io/eks-charts  && helm repo update && helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=${var.name}-eks-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller



eksctl create iamserviceaccount --cluster Terraform-eks-cluster --region us-east-1 --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::237924323600:policy/ALBIngressControllerIAMPolicy --override-existing-serviceaccounts --approve

aws eks update-kubeconfig --name Terraform-eks-cluster --region us-east-1

eksctl create iamidentitymapping --cluster Terraform-eks-cluster --region ${var.region} --arn ${data.aws_iam_role.describe_role.arn} --username build --group system:masters

ksctl utils associate-iam-oidc-provider --region Terraform-eks-cluster --cluster ${var.name}-eks-cluster --approve